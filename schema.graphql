enum TokenActionType {
  Unknown
  Issuance
  Restoration
  Acceptance
  Surrender
  Nomination
  NominationRevocation
  BeneficiaryTransfer
  HolderTransfer
}

type TitleEscrow @entity {
  id: ID!
  registry: TokenRegistry!
  token: Token!
  beneficiary: Account
  holder: Account
  nominee: Account
  active: Boolean!
  beneficiaryTransfers: [BeneficiaryTransfer!]! @derivedFrom(field: "titleEscrow")
  holderTransfers: [HolderTransfer!]! @derivedFrom(field: "titleEscrow")
  nominations: [Nomination!]! @derivedFrom(field: "titleEscrow")
  surrenders: [Surrender!]! @derivedFrom(field: "titleEscrow")
  restorations: [Restoration!]! @derivedFrom(field: "titleEscrow")
  issuances: [Issuance!]! @derivedFrom(field: "titleEscrow")
}

type Account @entity {
  id: ID!
  titleEscrowsAsBeneficiary: [TitleEscrow!]! @derivedFrom(field: "beneficiary")
  titleEscrowsAsHolder: [TitleEscrow!]! @derivedFrom(field: "holder")
  titleEscrowsAsNominee: [TitleEscrow!]! @derivedFrom(field: "nominee")
  beneficiaryTransfersAsFrom: [BeneficiaryTransfer!]! @derivedFrom(field: "from")
  beneficiaryTransfersAsTo: [BeneficiaryTransfer!]! @derivedFrom(field: "to")
  beneficiaryTransfersAsInitiator: [BeneficiaryTransfer!]! @derivedFrom(field: "initiator")
  holderTransfersAsFrom: [HolderTransfer!]! @derivedFrom(field: "from")
  holderTransfersAsTo: [HolderTransfer!]! @derivedFrom(field: "to")
  holderTransfersAsInitiator: [HolderTransfer!]! @derivedFrom(field: "initiator")
  nominationRevocationsAsNominee: [NominationRevocation!]! @derivedFrom(field: "nominee")
  nominationRevocationsAsInitiator: [NominationRevocation!]! @derivedFrom(field: "initiator")
  nominationsAsNominee: [Nomination!]! @derivedFrom(field: "nominee")
  nominationsAsPrevNominee: [Nomination!]! @derivedFrom(field: "prevNominee")
  nominationsAsInitiator: [Nomination!]! @derivedFrom(field: "initiator")
  restorationsAsInitiator: [Restoration!]! @derivedFrom(field: "initiator")
  acceptancesAsInitiator: [Acceptance!]! @derivedFrom(field: "initiator")
  surrendersAsInitiator: [Surrender!]! @derivedFrom(field: "initiator")
  issuancesAsBeneficiary: [Issuance!]! @derivedFrom(field: "beneficiary")
  issuancesAsHolder: [Issuance!]! @derivedFrom(field: "holder")
  issuancesAsInitiator: [Issuance!]! @derivedFrom(field: "initiator")
  tokenSnapshotsAsBeneficiary: [TokenSnapshot!]! @derivedFrom(field: "beneficiary")
  tokenSnapshotsAsHolder: [TokenSnapshot!]! @derivedFrom(field: "holder")
  tokenSnapshotsAsNominee: [TokenSnapshot!]! @derivedFrom(field: "nominee")
}

type Nomination implements Event @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  tokenSnapshot: TokenSnapshot!
  registry: TokenRegistry!
  token: Token!
  titleEscrow: TitleEscrow!
  nominee: Account!
  prevNominee: Account
  initiator: Account!
}

type NominationRevocation implements Event @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  tokenSnapshot: TokenSnapshot!
  registry: TokenRegistry!
  token: Token!
  titleEscrow: TitleEscrow!
  nominee: Account!
  initiator: Account!
}

type Surrender implements Event @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  tokenSnapshot: TokenSnapshot!
  registry: TokenRegistry!
  token: Token!
  titleEscrow: TitleEscrow!
  initiator: Account!
}

type Restoration implements Event @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  tokenSnapshot: TokenSnapshot!
  registry: TokenRegistry!
  token: Token!
  titleEscrow: TitleEscrow!
  initiator: Account!
}

type Acceptance implements Event @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  tokenSnapshot: TokenSnapshot!
  registry: TokenRegistry!
  token: Token!
  initiator: Account!
}

type Issuance implements Event @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  tokenSnapshot: TokenSnapshot!
  registry: TokenRegistry!
  token: Token!
  beneficiary: Account!
  holder: Account!
  titleEscrow: TitleEscrow!
  initiator: Account!
}

type TokenRegistry @entity {
  id: ID!
  name: String
  symbol: String
  tokens: [Token!]! @derivedFrom(field: "registry")
  titleEscrows: [TitleEscrow!]! @derivedFrom(field: "registry")
  beneficiaryTransfers: [BeneficiaryTransfer!]! @derivedFrom(field: "registry")
  holderTransfers: [HolderTransfer!]! @derivedFrom(field: "registry")
  nominations: [Nomination!]! @derivedFrom(field: "registry")
  nominationRevocations: [NominationRevocation!]! @derivedFrom(field: "registry")
  surrenders: [Surrender!]! @derivedFrom(field: "registry")
  restorations: [Restoration!]! @derivedFrom(field: "registry")
  acceptances: [Acceptance!]! @derivedFrom(field: "registry")
  issuances: [Issuance!]! @derivedFrom(field: "registry")
  tokenSnapshots: [TokenSnapshot!]! @derivedFrom(field: "registry")
}

type Token @entity {
  id: ID!
  documentId: String!
  documentIdInt: BigInt!
  registry: TokenRegistry!
  titleEscrow: TitleEscrow!
  surrendered: Boolean!
  accepted: Boolean!
  beneficiaryTransfers: [BeneficiaryTransfer!]! @derivedFrom(field: "token")
  holderTransfers: [HolderTransfer!]! @derivedFrom(field: "token")
  nominations: [Nomination!]! @derivedFrom(field: "token")
  nominationRevocations: [NominationRevocation!]! @derivedFrom(field: "token")
  surrenders: [Surrender!]! @derivedFrom(field: "token")
  restorations: [Restoration!]! @derivedFrom(field: "token")
  acceptances: [Acceptance!]! @derivedFrom(field: "token")
  issuances: [Issuance!]! @derivedFrom(field: "token")
  tokenSnapshots: [TokenSnapshot!]! @derivedFrom(field: "token")
}

type TokenSnapshot @entity {
  id: ID!
  timestamp: BigInt!
  blockNumber: BigInt!
  token: Token!
  registry: TokenRegistry!

  beneficiary: Account
  holder: Account
  nominee: Account
  surrendered: Boolean!
  accepted: Boolean!

  action: TokenActionType!
}

type BeneficiaryTransfer implements Event @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  registry: TokenRegistry!
  token: Token!
  tokenSnapshot: TokenSnapshot!
  titleEscrow: TitleEscrow!
  from: Account
  to: Account
  initiator: Account!
}

type HolderTransfer implements Event @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  registry: TokenRegistry!
  token: Token!
  tokenSnapshot: TokenSnapshot!
  titleEscrow: TitleEscrow!
  from: Account
  to: Account
  initiator: Account!
}

interface Event {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  tokenSnapshot: TokenSnapshot!
}

type Transaction @entity {
  id: ID!
  timestamp: BigInt!
  blockNumber: BigInt!
  events: [Event!]! @derivedFrom(field: "transaction")
}
